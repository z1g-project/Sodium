{
  "version": 3,
  "sources": ["../lib/global/rewrite/html/srcset.ts", "../lib/global/rewrite/html/nodewrapper.ts", "../lib/global/rewrite/html/generateHead.ts", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/unicode.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/error-codes.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/tokenizer/preprocessor.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/token.js", "../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.ts", "../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.ts", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/html.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/tokenizer/index.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/parser/open-element-stack.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/parser/formatting-element-list.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/tree-adapters/default.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/doctype.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/common/foreign-content.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/parser/index.js", "../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/escape.ts", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/serializer/index.js", "../node_modules/.pnpm/parse5@7.1.2/node_modules/parse5/dist/index.js", "../lib/html/index.ts"],
  "sourcesContent": ["export default {\r\n    encode(val: string | undefined, dynamic: Object | any) {\r\n        if (!val) return val;\r\n        if (!(val.toString())) return val;\r\n\r\n        return val.split(', ').map((s: any) => {\r\n            return s.split(' ').map((e: any,i: any)=>{\r\n                if (i == 0) {\r\n                    return dynamic.url.encode(e, dynamic.baseURL || dynamic.meta);\r\n                }\r\n    \r\n                return e;\r\n            }).join(' ');\r\n        }).join(', ');\r\n    },\r\n    decode(val: string | undefined) {\r\n        if (!val) return val;\r\n\r\n        return val;\r\n    },\r\n}", "export default class Node {\r\n    Original: Object | any | null = null;\r\n    ctx: any;\r\n\r\n    constructor(element: Element, ctx: any) {\r\n        this.Original = element;\r\n\r\n        var that = this;\r\n\r\n        this.Original.attribs = new Proxy(this.Original.attribs||{}, {\r\n            set: (target:any, prop: string, value:any): any => {\r\n                var a = target[prop] = value;\r\n\r\n                that.Original.attrs = Object.keys(target).map((key:any) => {\r\n                    return {\r\n                        name: key,\r\n                        value: target[key] + ''\r\n                    }\r\n                });\r\n\r\n                return a || (a + ' ');\r\n            },\r\n            deleteProperty: (target: any, prop: string): any => {\r\n                var a = delete target[prop];\r\n\r\n                that.Original.attrs = Object.keys(target).map((key:any) => {\r\n                    return {\r\n                        name: key,\r\n                        value: target[key]\r\n                    }\r\n                });\r\n\r\n                return a;\r\n            }\r\n        });\r\n\r\n        this.ctx = ctx;\r\n    }\r\n\r\n    getAttribute(attr: string) {\r\n        if (!this.Original.attribs) return false;\r\n\r\n        return (typeof this.Original.attribs[attr] == 'undefined' ? null : this.Original.attribs[attr].trim());\r\n    }\r\n\r\n    setAttribute(attr: string, value: any) {\r\n        if (!this.Original.attribs) return false;\r\n\r\n        return this.Original.attribs[attr] = value;\r\n    }\r\n\r\n    removeAttribute(attr: string) {\r\n        if (!this.Original.attribs) return false;\r\n\r\n        return delete this.Original.attribs[attr];\r\n    }\r\n\r\n    hasAttribute(attr: string) {\r\n        if (!this.Original.attribs) return false;\r\n\r\n        return this.Original.attribs.hasOwnProperty(attr);\r\n    }\r\n}", "import { Element } from \"domhandler\";\r\nimport html from \"./html\";\r\n\r\ndeclare const self: Window | any;\r\n\r\nexport default function GenerateHead(this: html, scriptURL: string, configURL: string, mutationURL: string, cookies: string | null, script: string = '', object: boolean = false, bare: string = '') {\r\n    if (self.__dynamic$config) {\r\n        var cache = self.__dynamic$config.mode == 'development';\r\n    } else var cache = false;\r\n\r\n    if (object) {\r\n        var head: Array<Object> = [\r\n            {nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: scriptURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}]},\r\n            {nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: configURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}]},\r\n        ];\r\n    \r\n        if (this.ctx.config.assets.files.inject) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: this.ctx.config.assets.files.inject+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}]});\r\n        if (cookies) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: 'data:application/javascript;base64,'+btoa(`self.__dynamic$cookies = atob(\"${btoa(cookies)}\");document.currentScript?.remove();`)}]});\r\n        if (script) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: 'data:application/javascript;base64,'+btoa(script+';document.currentScript?.remove();')}]});\r\n        if (bare) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: 'data:application/javascript;base64,'+btoa(bare+';document.currentScript?.remove();')}]});\r\n    \r\n        return head;\r\n    } else {\r\n        var array: Array<Object> = [\r\n            `<script src=\"${configURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}\"></script>`,\r\n            //`<script src=\"${mutationURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}\"></script>`,\r\n            `<script src=\"${scriptURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}\"></script>`,\r\n        ]\r\n\r\n        if (this.ctx.config.assets.files.inject) array.unshift(`<script src=\"${this.ctx.config.assets.files.inject+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}\"></script>`);\r\n        if (cookies) array.unshift(`<script src=\"${'data:application/javascript;base64,'+btoa(`self.__dynamic$cookies = atob(\"${btoa(cookies)}\");document.currentScript?.remove();`)}\"></script>`);\r\n        if (script) array.unshift(`<script src=\"${'data:application/javascript;base64,'+btoa(script+';document.currentScript?.remove();')}\"></script>`);\r\n        if (bare) array.unshift(`<script src=\"${'data:application/javascript;base64,'+btoa(bare+';document.currentScript?.remove();')}\"></script>`);\r\n\r\n        return array;\r\n    }\r\n    \r\n    /*if (self.__dynamic$config) {\r\n        var cache = self.__dynamic$config.mode == 'development';\r\n    } else var cache = false;\r\n\r\n    var head: Array<Object> = [\r\n        {nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: scriptURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}]},\r\n        {nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: configURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}]},\r\n    ];\r\n\r\n    if (this.ctx.config.assets.files.inject) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: this.ctx.config.assets.files.inject+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}]});\r\n    if (cookies) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: 'data:application/javascript;base64,'+btoa(`self.__dynamic$cookies = atob(\"${btoa(cookies)}\");document.currentScript?.remove();`)}]});\r\n    if (script) head.unshift({nodeName: 'script', tagName: 'script', namespaceURI: 'http://www.w3.org/1999/xhtml', childNodes: [], attrs: [{name: 'src', value: 'data:application/javascript;base64,'+btoa(script+';document.currentScript?.remove();')}]});\r\n\r\n    return head;*/\r\n\r\n    \r\n    /*var array: Array<Object> = [\r\n        new Element('script', {src: scriptURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}),\r\n        new Element('script', {src: configURL+(cache?'?'+Math.floor(Math.random()*(99999-10000)+10000):'')}),\r\n    ]\r\n\r\n    if (cookies) array.unshift(new Element('script', {src: 'data:application/javascript;base64,'+btoa(`self.__dynamic$cookies = atob(\"${btoa(cookies)}\");document.currentScript?.remove();`)}, []));\r\n    if (script) array.unshift(new Element('script', {src: 'data:application/javascript;base64,'+btoa(script+';document.currentScript?.remove();')}, []));\r\n\r\n    return array;*/\r\n}", "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map", null, null, null, null, "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", null, "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map", "import Srcset from '../global/rewrite/html/srcset';\r\nimport Node from '../global/rewrite/html/nodewrapper';\r\nimport MetaURL from '../global/meta/type';\r\nimport generateHead from '../global/rewrite/html/generateHead';\r\nimport { Element } from 'parse5/dist/tree-adapters/default';\r\nimport * as parse5 from 'parse5';\r\n\r\n(self as any).html = class html {\r\n\r\n  ctx;\r\n\r\n  generateHead = generateHead;\r\n\r\n  config = [\r\n      {\r\n        \"elements\": \"all\",\r\n        \"tags\": ['style'],\r\n        \"action\": \"css\"\r\n      },\r\n      {\r\n          \"elements\": ['script', 'iframe', 'embed', 'input', 'track', 'media', 'source', 'img'],\r\n          \"tags\": ['src'],\r\n          \"action\": \"url\"\r\n      },\r\n      {\r\n          \"elements\": ['source', 'img'],\r\n          \"tags\": ['srcset'],\r\n          \"action\": \"srcset\"\r\n      },\r\n      {\r\n          \"elements\": ['a', 'link', 'area'],\r\n          \"tags\": ['href'],\r\n          \"action\": \"url\"\r\n      },\r\n      {\r\n          \"elements\": ['form'],\r\n          \"tags\": ['action'],\r\n          \"action\": \"url\"\r\n      }, \r\n      {\r\n          \"elements\": ['object'],\r\n          \"tags\": ['data'],\r\n          \"action\": \"url\",\r\n      },\r\n      {\r\n        \"elements\": ['script', 'link'],\r\n        \"tags\": ['integrity'],\r\n        \"action\": \"rewrite\",\r\n        \"new\": \"nointegrity\",\r\n      },\r\n      {\r\n        \"elements\": ['script', 'link'],\r\n        \"tags\": ['nonce'],\r\n        \"action\": \"rewrite\",\r\n        \"new\": \"nononce\",\r\n      },\r\n      {\r\n        \"elements\": ['meta'],\r\n        \"tags\": ['http-equiv'],\r\n        \"action\": \"http-equiv\",\r\n      },\r\n      {\r\n        \"elements\": ['iframe'],\r\n        \"tags\": ['srcdoc'],\r\n        \"action\": \"html\",\r\n      },\r\n      {\r\n        \"elements\": ['link'],\r\n        \"tags\": [\"imagesrcset\"],\r\n        \"action\": \"srcset\",\r\n      },\r\n      {\r\n        \"elements\": 'all',\r\n        \"tags\": ['onclick'],\r\n        \"action\": \"js\",\r\n      }\r\n  ];\r\n\r\n  constructor(ctx:any) {\r\n    this.ctx = ctx.ctx;\r\n  }\r\n\r\n  generateRedirect(url:any) {\r\n    return `\r\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<TITLE>301 Moved</TITLE></HEAD><BODY>\r\n<H1>301 Moved</H1>\r\nThe document has moved\r\n<A HREF=\"${url}\">here</A>.\r\n</BODY></HTML>\r\n    `\r\n  }\r\n\r\n  iterate(_dom: any, cb: any) {\r\n    function it(dom: any = _dom) {\r\n      for (var i = 0; i<dom.childNodes.length; i++) {\r\n        cb(dom.childNodes[i]);\r\n    \r\n        if (dom.childNodes[i].childNodes) if (dom.childNodes[i].childNodes.length) {\r\n          it(dom.childNodes[i]);\r\n        };\r\n      }\r\n    }\r\n  \r\n    it(_dom);\r\n  }\r\n\r\n  rewrite(src:any, meta:MetaURL, head: any = []) {\r\n    const that = this;\r\n\r\n    if (Array.isArray(src)) src = src[0];\r\n    \r\n    if (!src) return src;\r\n\r\n    src = src.toString();\r\n\r\n    if (!src.match(/<(html|script|style)[^>]*>/g) && src.match(/<\\!DOCTYPE[^>]*>/gi)) return src;\r\n\r\n    var ast = parse5.parse(src, {});\r\n\r\n    var nodes: Array<Element | any> = [];\r\n\r\n    this.iterate(ast, (node: Element) => nodes.push(node));\r\n\r\n    nodes = nodes.map((e: any) => (e.attribs = {}, e.attrs?e.attrs.map(({name, value}: any)=>e.attribs[name]=value):null, e));\r\n\r\n    if (nodes.find(e=>e.nodeName=='base')) {\r\n      var base: URL | string = new URL(nodes.find(e=>e.nodeName=='base').attribs['href'], new URL(meta.href)).href;\r\n    } else {\r\n      var base: URL | string = meta.href;\r\n    }\r\n\r\n    base = new URL(base);\r\n\r\n    for (var node of nodes) {\r\n      var rewritten = new Node(node, that.ctx);\r\n\r\n      if (node.nodeName == 'base') {\r\n        rewritten.setAttribute('data-dynamic_href', rewritten.getAttribute('href'));\r\n        rewritten.setAttribute('href', this.ctx.url.encode(rewritten.getAttribute('href'), meta));\r\n      }\r\n\r\n      if (node.nodeName == 'script') {\r\n          if (meta.href == 'about:blank') node.attribs.defer = \"true\";\r\n\r\n          if (!rewritten.getAttribute('src') && (rewritten.getAttribute('type') !== 'application/json')) {\r\n              node.childNodes.forEach(( script: Element & { value: string } ) => {\r\n                  if (script.nodeName!=='#text') return script;\r\n                  if (rewritten.getAttribute('type') && rewritten.getAttribute('type')!=='application/javascript' && rewritten.getAttribute('type')!=='text/javascript' && rewritten.getAttribute('type')!=='module') return e;\r\n\r\n                  script.value = that.ctx.rewrite.js.rewrite(script.value, {type: 'script'}, false, that.ctx);\r\n              });\r\n          }\r\n      }\r\n\r\n      if (node.nodeName == 'style') {\r\n          node.childNodes.forEach(( style: Element & { value: string } )=>{\r\n              if (style.nodeName !== '#text') return e;\r\n\r\n              style.value = that.ctx.rewrite.css.rewrite(style.value, base);\r\n          });\r\n      }\r\n\r\n      for (var config of that.config) {\r\n        if (config.elements === 'all' || config.elements.indexOf(node.nodeName) > -1) {\r\n          for (var tag of config.tags) {\r\n            if (!rewritten.hasAttribute(tag) || !rewritten.getAttribute(tag)) continue;\r\n\r\n            if (node.tagName == 'link' && (rewritten.getAttribute('rel') == 'icon' || rewritten.getAttribute('rel') == 'shortcut icon') && this.ctx.config.tab?.icon) {\r\n              rewritten.setAttribute(`data-dynamic_${tag}`, rewritten.getAttribute(tag));\r\n              rewritten.setAttribute('href', this.ctx.url.encode(this.ctx.config.tab.icon, base));\r\n\r\n              continue;\r\n            }\r\n\r\n            if (config.action === 'url') {\r\n              rewritten.setAttribute(`data-dynamic_${tag}`, rewritten.getAttribute(tag));\r\n              if (!rewritten.getAttribute(tag).match(that.ctx.regex.ProtocolRegex) && rewritten.getAttribute(tag).match(/^([a-zA-Z0-9\\-]+)\\:\\/\\//g)) continue;\r\n              rewritten.setAttribute(tag, that.ctx.url.encode(rewritten.getAttribute(tag), base));\r\n            } else if (config.action === 'srcset') {\r\n              rewritten.setAttribute(`data-dynamic_${tag}`, rewritten.getAttribute(tag));\r\n              rewritten.setAttribute(tag, Srcset.encode(rewritten.getAttribute(tag), that.ctx));\r\n            } else if (config.action === 'rewrite') {\r\n              rewritten.setAttribute(config.new as any, rewritten.getAttribute(tag));\r\n              rewritten.removeAttribute(tag);\r\n            } else if (config.action === 'html') {\r\n              rewritten.setAttribute(`data-dynamic_${tag}`, rewritten.getAttribute(tag));\r\n              rewritten.removeAttribute(tag);\r\n\r\n              const blob = new Blob([that.ctx.rewrite.html.rewrite(rewritten.getAttribute(tag), base)], {type: 'text/html'});\r\n              rewritten.setAttribute('src', URL.createObjectURL(blob));\r\n            } else if (config.action === 'http-equiv') {\r\n              const content = rewritten.getAttribute('content');\r\n              const name = rewritten.getAttribute('http-equiv');\r\n\r\n              switch(name.toLowerCase()) {\r\n                case \"refresh\":\r\n                  var time = content.split('url=')[0].split(';')[0], value = content.split('url=')[1];\r\n\r\n                  rewritten.setAttribute('content', `${time};url=${that.ctx.url.encode(value, base)}`);\r\n                  break;\r\n                case \"content-security-policy\":\r\n                  rewritten.removeAttribute('content');\r\n                  rewritten.removeAttribute('http-equiv');\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            } else if (config.action === 'css') {\r\n              rewritten.setAttribute(`data-dynamic_${tag}`, rewritten.getAttribute(tag));\r\n              rewritten.setAttribute(tag, that.ctx.rewrite.css.rewrite(rewritten.getAttribute(tag), base));\r\n            } else if (config.action === 'delete') {\r\n              rewritten.removeAttribute(tag);\r\n            } else if (config.action === 'js') {\r\n              rewritten.setAttribute(tag, that.ctx.rewrite.js.rewrite(rewritten.getAttribute(tag), {type: 'script'}, false, that.ctx));\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    if (head && ast.childNodes.length && head.length) {\r\n      var html: any = ast.childNodes.find((e: any) => e.nodeName == 'html');\r\n\r\n      for (var e = 0; e < head.length; e++) {\r\n        if (html) {\r\n          html.childNodes.unshift(head[e]);\r\n          continue;\r\n        }\r\n\r\n        ast.childNodes.unshift(head[e]);\r\n      }\r\n    }\r\n    \r\n    src = parse5.serialize(ast as any) as string;\r\n\r\n    return src;\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["srcset_default", "val", "dynamic", "s", "e", "i", "Node", "element", "ctx", "that", "target", "prop", "value", "a", "key", "attr", "GenerateHead", "scriptURL", "configURL", "mutationURL", "cookies", "script", "object", "bare", "cache", "head", "array", "UNDEFINED_CODE_POINTS", "REPLACEMENT_CHARACTER", "CODE_POINTS", "SEQUENCES", "isSurrogate", "cp", "isSurrogatePair", "getSurrogatePairCodePoint", "cp1", "cp2", "isControlCodePoint", "isUndefinedCodePoint", "ERR", "DEFAULT_BUFFER_WATERLINE", "Preprocessor", "handler", "code", "line", "col", "offset", "cp", "nextCp", "isSurrogatePair", "getSurrogatePairCodePoint", "CODE_POINTS", "ERR", "chunk", "isLastChunk", "pattern", "caseSensitive", "i", "pos", "isSurrogate", "isControlCodePoint", "isUndefinedCodePoint", "count", "TokenType", "getTokenAttr", "token", "attrName", "i", "decode_data_html_default", "c", "decode_data_xml_default", "c", "decodeMap", "fromCodePoint", "_a", "codePoint", "output", "replaceCodePoint", "CharCodes", "TO_LOWER_BIT", "BinTrieFlags", "isNumber", "code", "isHexadecimalCharacter", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "EntityDecoderState", "DecodingMode", "EntityDecoder", "decodeTree", "emitCodePoint", "errors", "decodeMode", "str", "offset", "start", "end", "base", "digitCount", "startIdx", "char", "lastCp", "expectedLength", "_a", "replaceCodePoint", "current", "valueLength", "determineBranch", "result", "consumed", "getDecoder", "ret", "decoder", "fromCodePoint", "lastIndex", "len", "nodeIdx", "branchCount", "jumpOffset", "value", "lo", "hi", "mid", "midVal", "htmlDecoder", "decode_data_html_default", "xmlDecoder", "decode_data_xml_default", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "TAG_NAME_TO_ID", "getTagID", "tagName", "_a", "$", "SPECIAL_ELEMENTS", "isNumberedHeader", "tn", "UNESCAPED_TEXT", "hasUnescapedText", "scriptingEnabled", "C1_CONTROLS_REFERENCE_REPLACEMENTS", "State", "TokenizerMode", "isAsciiDigit", "cp", "CODE_POINTS", "isAsciiUpper", "isAsciiLower", "isAsciiLetter", "isAsciiAlphaNumeric", "isAsciiUpperHexDigit", "isAsciiLowerHexDigit", "isAsciiHexDigit", "toAsciiLower", "isWhitespace", "isEntityInAttributeInvalidEnd", "nextCp", "isScriptDataDoubleEscapeSequenceEnd", "Tokenizer", "options", "handler", "Preprocessor", "code", "_a", "_b", "offset", "writeCallback", "chunk", "isLastChunk", "count", "state", "i", "pattern", "caseSensitive", "TokenType", "TAG_ID", "initialName", "type", "chars", "attrNameFirstCh", "token", "getTokenAttr", "attrLocations", "ERR", "ct", "getTagID", "nextLocation", "location", "ch", "result", "excess", "withoutSemicolon", "current", "decode_data_html_default", "determineBranch", "masked", "BinTrieFlags", "valueLength", "REPLACEMENT_CHARACTER", "_cp", "SEQUENCES", "matchResult", "isSurrogate", "isUndefinedCodePoint", "isControlCodePoint", "replacement", "IMPLICIT_END_TAG_REQUIRED", "TAG_ID", "IMPLICIT_END_TAG_REQUIRED_THOROUGHLY", "SCOPING_ELEMENT_NS", "NS", "NAMED_HEADERS", "TABLE_ROW_CONTEXT", "TABLE_BODY_CONTEXT", "TABLE_CONTEXT", "TABLE_CELLS", "OpenElementStack", "document", "treeAdapter", "handler", "element", "tagID", "popped", "oldElement", "newElement", "idx", "referenceElement", "newElementID", "insertionIdx", "tagName", "targetIdx", "tagNames", "targetNS", "namespace", "i", "elementIdx", "tn", "ns", "isNumberedHeader", "exclusionId", "EntryType", "MARKER", "FormattingElementList", "treeAdapter", "newElement", "neAttrs", "candidates", "neAttrsLength", "neTagName", "neNamespaceURI", "i", "entry", "element", "elementAttrs", "neAttrsMap", "neAttr", "validCandidates", "candidate", "cAttr", "token", "bookmarkIdx", "entryIndex", "markerIdx", "tagName", "createTextNode", "value", "defaultTreeAdapter", "DOCUMENT_MODE", "tagName", "namespaceURI", "attrs", "data", "parentNode", "newNode", "referenceNode", "insertionIdx", "templateElement", "contentElement", "document", "name", "publicId", "systemId", "doctypeNode", "node", "mode", "idx", "text", "prevNode", "recipient", "recipientAttrsMap", "attr", "j", "element", "textNode", "commentNode", "location", "endLocation", "VALID_DOCTYPE_NAME", "VALID_SYSTEM_ID", "QUIRKS_MODE_SYSTEM_ID", "QUIRKS_MODE_PUBLIC_ID_PREFIXES", "QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES", "QUIRKS_MODE_PUBLIC_IDS", "LIMITED_QUIRKS_PUBLIC_ID_PREFIXES", "LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES", "hasPrefix", "publicId", "prefixes", "prefix", "isConforming", "token", "getDocumentMode", "DOCUMENT_MODE", "systemId", "MIME_TYPES", "DEFINITION_URL_ATTR", "ADJUSTED_DEFINITION_URL_ATTR", "SVG_ATTRS_ADJUSTMENT_MAP", "attr", "XML_ATTRS_ADJUSTMENT_MAP", "NS", "SVG_TAG_NAMES_ADJUSTMENT_MAP", "tn", "EXITS_FOREIGN_CONTENT", "TAG_ID", "causesExit", "startTagToken", "name", "ATTRS", "adjustTokenMathMLAttrs", "token", "i", "adjustTokenSVGAttrs", "adjustedAttrName", "adjustTokenXMLAttrs", "adjustedAttrEntry", "adjustTokenSVGTagName", "adjustedTagName", "getTagID", "isMathMLTextIntegrationPoint", "ns", "isHtmlIntegrationPoint", "attrs", "value", "isIntegrationPoint", "foreignNS", "HIDDEN_INPUT_TYPE", "AA_OUTER_LOOP_ITER", "AA_INNER_LOOP_ITER", "InsertionMode", "BASE_LOC", "TABLE_STRUCTURE_TAGS", "TAG_ID", "defaultParserOptions", "defaultTreeAdapter", "Parser", "options", "document", "fragmentContext", "scriptHandler", "Tokenizer", "FormattingElementList", "getTagID", "OpenElementStack", "html", "parser", "opts", "TAG_NAMES", "NS", "documentMock", "rootElement", "fragment", "token", "code", "beforeToken", "_a", "loc", "err", "node", "tid", "isTop", "_b", "current", "currentTagId", "isHTML", "currentToken", "nextTokenizerState", "TokenizerMode", "name", "publicId", "systemId", "docTypeNode", "element", "location", "parent", "namespaceURI", "tagName", "tagID", "tmpl", "content", "commentNode", "beforeElement", "siblings", "textNodeIdx", "textNode", "endLine", "endCol", "endOffset", "donor", "recipient", "child", "closingToken", "ctLoc", "tn", "endLoc", "TokenType", "foreignNS", "ns", "attrs", "isIntegrationPoint", "listLength", "endIndex", "entry", "EntryType", "unopenIdx", "i", "selectIdx", "openElement", "id", "SPECIAL_ELEMENTS", "characterInForeignContent", "tokenInInitialMode", "tokenBeforeHtml", "tokenBeforeHead", "tokenInHead", "tokenInHeadNoScript", "tokenAfterHead", "characterInBody", "characterInTable", "characterInTableText", "tokenInColumnGroup", "tokenAfterBody", "tokenAfterAfterBody", "nullCharacterInForeignContent", "appendComment", "tokenInTableText", "appendCommentToRootHtmlElement", "appendCommentToDocument", "doctypeInInitialMode", "ERR", "startTagInForeignContent", "startTagBeforeHtml", "startTagBeforeHead", "startTagInHead", "startTagInHeadNoScript", "startTagAfterHead", "startTagInBody", "startTagInTable", "startTagInCaption", "startTagInColumnGroup", "startTagInTableBody", "startTagInRow", "startTagInCell", "startTagInSelect", "startTagInSelectInTable", "startTagInTemplate", "startTagAfterBody", "startTagInFrameset", "startTagAfterFrameset", "startTagAfterAfterBody", "startTagAfterAfterFrameset", "endTagInForeignContent", "endTagBeforeHtml", "endTagBeforeHead", "endTagInHead", "endTagInHeadNoScript", "endTagAfterHead", "endTagInBody", "endTagInText", "endTagInTable", "endTagInCaption", "endTagInColumnGroup", "endTagInTableBody", "endTagInRow", "endTagInCell", "endTagInSelect", "endTagInSelectInTable", "endTagInTemplate", "endTagAfterBody", "endTagInFrameset", "endTagAfterFrameset", "eofInBody", "eofInText", "eofInTemplate", "stopParsing", "CODE_POINTS", "whitespaceCharacterInBody", "whitespaceCharacterInTableText", "aaObtainFormattingElementEntry", "p", "formattingElementEntry", "genericEndTagInBody", "aaObtainFurthestBlock", "furthestBlock", "idx", "aaInnerLoop", "formattingElement", "lastElement", "nextElement", "elementEntry", "counterOverflow", "aaRecreateElementFromEntry", "newElement", "aaInsertLastNodeInCommonAncestor", "commonAncestor", "aaReplaceFormattingElement", "callAdoptionAgency", "target", "htmlElement", "htmlLocation", "bodyElement", "bodyLocation", "mode", "DOCUMENT_MODE", "getDocumentMode", "isConforming", "templateEndTagInHead", "errCode", "modeInBody", "htmlStartTagInBody", "bodyStartTagInBody", "framesetStartTagInBody", "addressStartTagInBody", "numberedHeaderStartTagInBody", "isNumberedHeader", "preStartTagInBody", "formStartTagInBody", "inTemplate", "listItemStartTagInBody", "elementId", "plaintextStartTagInBody", "buttonStartTagInBody", "aStartTagInBody", "activeElementEntry", "bStartTagInBody", "nobrStartTagInBody", "appletStartTagInBody", "tableStartTagInBody", "areaStartTagInBody", "isHiddenInput", "inputType", "getTokenAttr", "ATTRS", "inputStartTagInBody", "paramStartTagInBody", "hrStartTagInBody", "imageStartTagInBody", "textareaStartTagInBody", "xmpStartTagInBody", "iframeStartTagInBody", "noembedStartTagInBody", "selectStartTagInBody", "optgroupStartTagInBody", "rbStartTagInBody", "rtStartTagInBody", "mathStartTagInBody", "adjustTokenMathMLAttrs", "adjustTokenXMLAttrs", "svgStartTagInBody", "adjustTokenSVGAttrs", "genericStartTagInBody", "bodyEndTagInBody", "htmlEndTagInBody", "addressEndTagInBody", "formEndTagInBody", "formElement", "pEndTagInBody", "liEndTagInBody", "ddEndTagInBody", "numberedHeaderEndTagInBody", "appletEndTagInBody", "brEndTagInBody", "tokenInTable", "captionStartTagInTable", "colgroupStartTagInTable", "colStartTagInTable", "tbodyStartTagInTable", "tdStartTagInTable", "tableStartTagInTable", "inputStartTagInTable", "formStartTagInTable", "savedFosterParentingState", "TABLE_VOID_ELEMENTS", "REPLACEMENT_CHARACTER", "popUntilHtmlOrIntegrationPoint", "causesExit", "currentNs", "adjustTokenSVGTagName", "xmlCodeMap", "getCodePoint", "str", "index", "c", "getEscaper", "regex", "map", "data", "match", "lastIdx", "result", "escapeUTF8", "xmlCodeMap", "escapeAttribute", "escapeText", "VOID_ELEMENTS", "TAG_NAMES", "isVoidElement", "node", "options", "NS", "defaultOpts", "defaultTreeAdapter", "serialize", "opts", "serializeChildNodes", "serializeChildNodes", "parentNode", "options", "html", "container", "TAG_NAMES", "NS", "childNodes", "currentNode", "serializeNode", "node", "serializeElement", "serializeTextNode", "serializeCommentNode", "serializeDocumentTypeNode", "tn", "serializeAttributes", "isVoidElement", "treeAdapter", "attr", "escapeAttribute", "content", "parent", "parentTn", "hasUnescapedText", "escapeText", "parse", "html", "options", "Parser", "ctx", "GenerateHead", "url", "_dom", "cb", "it", "dom", "i", "src", "meta", "head", "that", "ast", "parse", "nodes", "node", "e", "name", "value", "base", "rewritten", "Node", "script", "style", "config", "tag", "srcset_default", "blob", "content", "time", "html", "serialize"]
}
